(function(){'use strict';function a(){return new Promise((a,b)=>{fetch(...arguments).then(c=>c.ok?c.json().then(a,b):b(c),b)})}function b(b,c){if('object'==typeof c)for(let a in c){const d=c[a];b+=`+${a}:${d instanceof Array?d.join(','):d}`}return a(`${f}?q=${b}`)}function c(a,b){return new Promise(async(c,f)=>{switch(b){case'github':try{c(d(a))}catch(a){f(a)}break;case'unpkg':c(e(a,i));}})}async function d(b){if(null===b.links.repository.match(/github\.com/)){const a=`${b.name} does not use github as it's repository. Found ${b.links.respository}`;throw console.error(a),new Error({msg:a,details:b})}console.log(`Loading via GitHub using ${b.links.respository}`);const c=b.links.repository.replace(/(^.*github\.com\/|\/$)/g,'');let d;try{if(d=await a(`${g}/${c}/tags`),0===d.length)throw d}catch(a){const c=`No tags found for ${b.name}'s listed repo. Unable to pull stable release. Aborting`;throw console.error(c),new Error({msg:c,details:a})}const e=d.find(a=>a.name===b.version||`v${b.version}`===a.name);let f;return'undefined'==typeof e?(f=d[0].name,console.warn(`Unable to find a suitable repo tag for version ${b.version}. Using the latest tag (${f}) instead.`)):f=e.name,`${h}/${c}/${f}`}function e(a,b){return`${b}/${a.name}@${a.version}`}const f='https://api.npms.io/v2/search',g='https://api.github.com/repos',h='https://gitcdn.link/repo',i='https://unpkg.com';class j{static get(d,e){return e=Object.assign({},{npmFilters:{not:['deprecated','insecure','unstable']},cdnProviders:['unpkg','github']},e),new Promise(async(f,g)=>{let h;try{h=await b(d,e.npmFilters)}catch(a){return console.error('Error searching NPM registry.'),void g({msg:'Error searching NPM registry.',details:a})}if(0===h.total){const a=`No results found for ${d}.`;return console.error(a),void g({msg:a,details:h})}if(100>parseInt(h.results[0].searchScore)&&!('forcePackage'in e)){const a=`Couldn't find an exact match for ${d}.\n\n`+`Use wnpm.search to determine the correct package name or use the 'forcePackage' option with wnpm.get`;return console.error(a),void g({msg:a,details:h})}const i=e.forcePackage-1||0,k=h.results[i].package;console.log(`Found ${d} as ${k.name} at ${k.version}; using ${k.links.repository}`);let l,m=!1;for(let a of e.cdnProviders)try{l=await c(k,a),m=!0;break}catch(b){console.warn(`Could not generate a CDN URL for ${a}`)}if(!m){`Couldn't generate a CDN URL for any provider`;return console.error('Couldn\'t generate a CDN URL for any provider'),void g({msg:'Couldn\'t generate a CDN URL for any provider',details:k})}let n;try{const b=await a(`${l}/package.json`);console.log(`package.json retrieved`),b.dependencies instanceof Array&&0<b.dependencies.length&&console.log(`This package appears to have dependencies. You may have issues running this package.`),n=b.unpkg||b.main,console.log(`Loading package ${b.unpkg?'unpkg':'main'} file: ${n}`)}catch(a){const b=`Error retrieving package.json for ${k.name}. Status: ${a.status}`;console.error(b),g({msg:b,details:a})}try{await j.load(`${l}/${n}`),console.log(`${k.name} loaded!`),f(k)}catch(a){console.error('An error occurred loading the script.'),g({msg:'An error occurred loading the script.',details:a})}})}static getAll(a,b){return Promise.all(a.map(a=>j.get(a,b)))}static load(a){return new Promise((b,c)=>{const d=document.createElement('SCRIPT');d.addEventListener('load',b,!1),d.addEventListener('error',c,!1),d.src=a,document.body.appendChild(d)})}static search(a='',c={}){return new Promise(async(d,f)=>{let e;try{e=await b(a,c)}catch(a){return console.error('Error searching NPM registry'),void f({msg:'Error searching NPM registry',details:a})}console.groupCollapsed(`${e.total} found for ${a}`),e.results.forEach((a,b)=>{console.groupCollapsed(`${b+1}. ${a.package.name}`),console.log(`Result score: ${parseInt(100*a.score.final)}%`),console.log(a.package.description),100>a.searchScore?console.log('%cThis package would not be selected automatically with wnpm.get','color: red'):console.log('%cThis package could be selected automatically with wnpm.get','color: green'),console.groupEnd()}),console.groupEnd(),d(e)})}}window.wnpm=j})();